#include <stdio.h>
#include <malloc.h>


typedef int TipoChave;

typedef struct {
    int Chave;
}TipoItem;

typedef struct Celula_str *Apontador;

typedef struct Celula_str {
    TipoItem Item;
    Apontador Prox;
}Celula;

typedef struct {
    Apontador Primeiro, Ultimo;
}TipoLista

typedef struct{
  int  *ponteiro_prox;
  int chave;
}elem;

void Inicializar_Lista(TipoLista *l){
    l->Primeiro = NULL;
}

void Inserir_Ordenado (TipoLista *lista, TipoChave inserido){
    Apontador p1 = lista->Primeiro;
    Apontador p2;
    if(lista->Primeiro == NULL){
        lista->Primeiro = (Apontador) malloc(sizeof(Celula));
        lista->Primeiro->Item = inserido;
        lista->Primeiro->Prox = NULL;
    }
    while(p1->Item < inserido){
        p1 = p1->Prox;
    }
    if(p1->Item == inserido){
        printf("Esta chave jÃ¡ se encontra na lista");
        return;
    }
    p2 = p1->Prox;
    p1->Prox = (Apontador) malloc(sizeof(Celula));
    p1->Prox->Prox = p2;
    return
}

int main(){

  elem *elem1 = malloc(1*sizeof(elem));
  int *ponteiro_inicio = elem1;
  (*elem1).chave = 12;
  (*elem1).ponteiro_prox = malloc(1*sizeof(elem));
  elem *elem2 = (*elem1).ponteiro_prox;
  (*elem2).chave = 13;
  (*elem2).ponteiro_prox = malloc(1*sizeof(elem));
  elem *elem3 = (*elem2).ponteiro_prox;
  (*elem3).chave = 14;
  (*elem3).ponteiro_prox = malloc(1*sizeof(elem));
  elem *elem4 = (*elem3).ponteiro_prox;
  (*elem4).chave = 15;
  (*elem4).ponteiro_prox = NULL;

  printf("%d\n%d\n", elem3, (*elem2).ponteiro_prox);

  return 0;
}
